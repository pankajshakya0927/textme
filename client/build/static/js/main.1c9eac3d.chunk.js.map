{"version":3,"sources":["assets/images/profile.png","shared/Utils.js","context/AuthContext.js","components/Toastr/Toastr.js","components/ChatBox/ChatBox.js","configurations/config.js","context/FriendsContext.js","components/ChatTabs/ChatTabs.js","components/AddFriends/AddFriends.js","components/Navbar/Navbar.js","components/Signup/Signup.js","components/Login/Login.js","components/Home/Homepage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Utils","setItemToLocalStorage","key","value","localStorage","setItem","getItemFromLocalStorage","getItem","getDefaultToastrOptions","show","variant","title","message","getSuccessToastrOptions","getErrorToastrOptions","logout","clear","AuthContext","createContext","AuthContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","isLoggedIn","setIsLoggedIn","react_default","a","createElement","Provider","children","Toastr","ToastContainer","position","className","Toast","onClose","onHide","delay","autohide","bg","toLowerCase","Header","src","alt","Body","ChatBox","typingTimer","useContext","setMessage","_useState3","_useState4","typingStatus","setTypingStatus","options","_useState5","_useState6","toastr","setToaster","lastMessageRef","useRef","username","current_user","JSON","parse","useEffect","current","scrollIntoView","behavior","messages","socket","on","typingData","clearTimeout","setTimeout","Fragment","Toastr_Toastr","Card","Button","onClick","setSelectedChat","io_index_esm","size","chatWith","ButtonGroup","aria-label","index_esm","color","fc_index_esm","map","msg","ListGroup","from","Item","to","text","ref","Footer","Form","InputGroup","bi_index_esm","gr_index_esm","Control","placeholder","onChange","e","target","onKeyDown","concat","emit","type","id","preventDefault","messageReq","chatId","console","log","handleSendMessage","config","apiBaseUrl","FriendsContext","FriendsContextProvider","updatedFriends","setUpdatedFriends","io","connect","transports","ChatTabs","friends","setFriends","chats","setChats","setMessages","_useState7","_useState8","newMessage","setNewMessage","_useState9","_useState10","tab","setTab","_useState11","_useState12","selectedChat","_useState13","_useState14","setChatId","_useState15","window","innerWidth","_useState16","width","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","access_token","reqConfig","headers","Content-type","Authorization","shouldFetch","history","useHistory","_useState17","_useState18","auth","fetchChats","fetchFriends","prev","toConsumableArray","handleSelectFriend","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","friend","chatReq","wrap","_context","next","members","axios","post","then","resp","data","chatRes","find","member","chat","_id","fetchMessages","error","errorOptions","response","catch","stop","_x","_x2","apply","this","arguments","_ref2","_callee2","_context2","get","push","_ref3","_callee3","_context3","forEach","handleSetTab","Tab","Container","Row","length","Col","sm","style","display","horizontal","action","href","handleSelectChat","require","data-holder-rendered","role","Content","Pane","eventKey","ChatBox_ChatBox","AddFriends","search","setSearch","handleClose","handleAddFriend","AddFriends_regeneratorRuntime","addUser","successOptions","Modal","closeButton","Title","users","filter","usernames","includes","user","NavbarOffCanvas","setShow","setUsers","_useContext","handleOnShow","navExpanded","setNavExpanded","closeNavBar","handleLogin","handleSignup","handleLogout","fetchAllUsers","Navbar_regeneratorRuntime","components_AddFriends_AddFriends","expand","Navbar","sticky","expanded","fluid","Brand","marginRight","hi_index_esm","Toggle","aria-controls","Offcanvas","aria-labelledby","placement","ai_index_esm","Nav","Link","path","NavDropdown","align","Signup","passwordType","setPasswordType","passwordInput","setPasswordInput","setUsername","password","setPassword","securityQ","setSecurityQ","securityA","setSecurityA","signupHandler","Signup_regeneratorRuntime","event","Group","controlId","Label","Text","muted","bs_index_esm","paddingRight","Select","defaultValue","disabled","label","ques","Login","loginHandler","Login_regeneratorRuntime","stringify","Homepage","App","FriendsContext_FriendsContextProvider","react_router_dom","Navbar_Navbar","react_router","exact","component","Signup_Signup","Login_Login","components_ChatTabs_ChatTabs","ReactDOM","createRoot","document","getElementById","render","AuthContext_AuthContextProvider","src_App"],"mappings":"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","file":"static/js/main.1c9eac3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.2a2b6c5a.png\";","export default {\n  setItemToLocalStorage: (key, value) => {\n    localStorage.setItem(key, value);\n  },\n\n  getItemFromLocalStorage: (key) => {\n    return localStorage.getItem(key);\n  },\n\n  getDefaultToastrOptions: () => {\n    const options = {\n      show: false,\n      variant: \"\",\n      title: \"\",\n      message: \"\",\n    };\n    return options;\n  },\n\n  getSuccessToastrOptions: (message) => {\n    const options = {\n      show: true,\n      variant: \"Success\",\n      title: \"Success\",\n      message: message,\n    };\n    return options;\n  },\n\n  getErrorToastrOptions: (title, message) => {\n    const options = {\n      show: true,\n      variant: \"Danger\",\n      title: title,\n      message: message,\n    };\n    return options;\n  },\n\n  logout: () => {\n    localStorage.clear();\n  }\n};\n","import React, { createContext, useState } from \"react\";\nimport Utils from \"../shared/Utils\";\n\nexport const AuthContext = createContext([]);\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // reloading page loses isLoggedIn context value therefore, check for isLoggedIn stored in localStorage\n  if (!isLoggedIn && Utils.getItemFromLocalStorage(\"isLoggedIn\")) {\n    setIsLoggedIn(true);\n  }\n\n  return (\n  <AuthContext.Provider value={{isLoggedIn, setIsLoggedIn}}>\n    {props.children}\n  </AuthContext.Provider>\n  );\n};","import React from \"react\";\n\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport Toast from \"react-bootstrap/Toast\";\n\nfunction Toastr(props) {\n  const handleClose = () => {\n    props.onHide();\n  };\n\n  return (\n    <ToastContainer position=\"top-end\" className=\"p-3\">\n      <Toast show={props.show} onClose={handleClose} delay={5000} autohide className=\"d-inline-block m-1\" bg={props.variant.toLowerCase()}>\n        <Toast.Header>\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\n          <strong className=\"me-auto\">{props.title}</strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">{props.message}</Toast.Body>\n      </Toast>\n    </ToastContainer>\n  );\n}\n\nexport default Toastr;\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { MdCall } from \"react-icons/md\";\nimport { FcVideoCall } from \"react-icons/fc\";\nimport { BiSmile } from \"react-icons/bi\";\nimport { GrAttachment } from \"react-icons/gr\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Toastr from \"../Toastr/Toastr\";\nimport Utils from \"../../shared/Utils\";\n\nimport \"./ChatBox.css\";\n\nexport default function ChatBox(props) {\n  const { isLoggedIn } = useContext(AuthContext);\n  const [message, setMessage] = useState(\"\");\n  const [typingStatus, setTypingStatus] = useState(\"\");\n\n  const options = Utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n  const lastMessageRef = useRef(null);\n  let typingTimer;\n  let username = null;\n  const current_user = JSON.parse(Utils.getItemFromLocalStorage(\"current_user\"));\n  if (current_user) username = current_user.username;\n\n  const handleTyping = () => {\n    let typingData = {\n      text: `${username} is typing...`,\n      from: username,\n      to: props.chatWith\n    }\n    props.socket.emit('typing', typingData);\n  }\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n\n    if (isLoggedIn && message) {\n      const messageReq = {\n        chatId: props.chatId,\n        message: message,\n        from: username,\n        to: props.chatWith\n      };\n\n      console.log(messageReq);\n      props.socket.emit(\"sendMessage\", messageReq);\n      setMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    // scroll to bottom every time messages change\n    lastMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [props.messages]);\n\n  useEffect(() => {\n    props.socket.on('typingStatus', (typingData) => {\n      clearTimeout(typingTimer);\n      setTypingStatus(typingData);\n      typingTimer = setTimeout(() => {\n        setTypingStatus(\"\");\n      }, 1000);\n    });\n    lastMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [typingStatus]);\n\n  return (\n    <>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n\n      <Card className=\"box\">\n        <Card.Header className=\"d-flex align-items-center justify-content-between\">\n          <div className=\"flex\">\n            <Button className=\"back-btn\" variant=\"light\" onClick={() => props.setSelectedChat(null)}>\n              <IoMdArrowRoundBack size={30} />\n            </Button>\n            <h4 className=\"word-wrap\">{props.chatWith}</h4>\n          </div>\n          <div>\n            <ButtonGroup aria-label=\"Call\">\n              <Button variant=\"light\">\n                <MdCall color=\"rgb(76, 175, 80)\" size={25} />\n              </Button>\n              <Button variant=\"light\">\n                <FcVideoCall size={30} />\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Card.Header>\n        <Card.Body className=\"overflow-auto chat-box\">\n          {props.messages.map((msg, key) => (\n            <ListGroup key={key} className={msg.from === username ? \"align-items-end mb-2\" : \"align-items-start mb-2\"}>\n              <ListGroup.Item variant={msg.from === username ? \"primary\" : \"\"} key={key}>\n                {msg.message}\n              </ListGroup.Item>\n              {/* <span>{new Date(msg.createdAt).toDateString()}</span> */}\n            </ListGroup>\n          ))}\n          {\n            props.chatWith === typingStatus.from && username === typingStatus.to ? <span className=\"typing\">{typingStatus.text}</span> : <span></span>\n          }\n          <div ref={lastMessageRef}></div>\n        </Card.Body>\n        <Card.Footer>\n          <Form>\n            <InputGroup>\n              <Button variant=\"outline-secondary\">\n                <BiSmile size={20} />\n              </Button>\n              <Button variant=\"outline-secondary\">\n                <GrAttachment size={17} />\n              </Button>\n              <Form.Control placeholder=\"Enter message...\" aria-label=\"Enter message\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={handleTyping} />\n              <Button type=\"Submit\" variant=\"primary\" id=\"send\" onClick={(e) => handleSendMessage(e)}>\n                Send\n              </Button>\n            </InputGroup>\n          </Form>\n        </Card.Footer>\n      </Card>\n    </>\n  );\n}\n","export default {\n    apiBaseUrl: \"https://textme.up.railway.app/api\"\n}","import React, { createContext, useState } from \"react\";\n\nexport const FriendsContext = createContext([]);\n\nexport const FriendsContextProvider = (props) => {\n  const [updatedFriends, setUpdatedFriends] = useState(null);\n\n  return (\n  <FriendsContext.Provider value={{updatedFriends, setUpdatedFriends}}>\n    {props.children}\n  </FriendsContext.Provider>\n  );\n};\n\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\n\nimport ChatBox from \"../ChatBox/ChatBox\";\nimport Toastr from \"../Toastr/Toastr\";\nimport Utils from \"../../shared/Utils\";\nimport config from \"../../configurations/config\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { FriendsContext } from \"../../context/FriendsContext\";\nimport \"./ChatTabs.css\";\n\nconst socket = io.connect(\"https://textme.up.railway.app/\", { transports: ['websocket'] });\n\nfunction ChatTabs() {\n  const [friends, setFriends] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState([]);\n  const [tab, setTab] = useState(1);\n  const [selectedChat, setSelectedChat] = useState();\n  const [chatId, setChatId] = useState();\n  const { updatedFriends } = useContext(FriendsContext);\n  const { isLoggedIn } = useContext(AuthContext);\n  const [width, setWidth] = useState(window.innerWidth);\n\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    }\n  }, [width]);\n\n  const isMobile = width <= 576;\n  let username = null;\n  const access_token = Utils.getItemFromLocalStorage(\"access_token\");\n  const current_user = JSON.parse(Utils.getItemFromLocalStorage(\"current_user\"));\n  if (current_user) username = current_user.username;\n\n  const reqConfig = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${access_token}`,\n    },\n  };\n\n  const shouldFetch = useRef(true);\n  const history = useHistory();\n\n  const options = Utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  if (updatedFriends && updatedFriends !== friends) {\n    setFriends(updatedFriends);\n  }\n\n  useEffect(() => {\n    socket.auth = { username };\n  }, [username]);\n\n  useEffect(() => {\n    if (isLoggedIn && shouldFetch.current) {\n      shouldFetch.current = false;\n      fetchChats();\n      fetchFriends();\n    }\n\n    socket.on(\"fetchMessages\", (messages) => {\n      setMessages(messages);\n    })\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"newMessageReceived\", (newMessage) => {\n      setNewMessage(newMessage);\n    })\n  }, [messages]);\n\n  useEffect(() => {\n    if (newMessage && newMessage.from === selectedChat) setMessages((prev) => [...prev, newMessage]);\n  }, [newMessage]);\n\n  const handleSelectFriend = async (friend, e) => {\n    e.preventDefault();\n\n    if (isLoggedIn) {\n      const chatReq = {\n        members: [friend, username],\n      };\n\n      await axios\n        .post(`${config.apiBaseUrl}/chat/createChat`, chatReq, reqConfig)\n        .then(\n          (resp) => {\n            if (resp && resp.data && resp.data.data) {\n              const chatRes = resp.data.data;\n              fetchChats();\n\n              const chatWith = chatRes.members.find((member) => member !== username);\n              setSelectedChat(chatWith);\n              setTab(1); // Clicking on friend should open the chat with them\n\n              const chat = {\n                chatId: chatRes._id,\n                chatWith\n              }\n              fetchMessages(chat);\n            }\n          },\n          (error) => {\n            const errorOptions = Utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n            setToaster(errorOptions);\n          }\n        )\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  const fetchFriends = async () => {\n    await axios\n      .get(`${config.apiBaseUrl}/user/fetchFriends`, reqConfig)\n      .then((resp) => {\n        if (resp && resp.data && resp.data.data) {\n          setFriends(resp.data.data);\n        }\n      })\n      .catch((error) => {\n        const errorOptions = Utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n        setToaster(errorOptions);\n        history.push(\"/login\");\n        Utils.logout();\n      });\n  };\n\n  const fetchChats = async () => {\n    if (isLoggedIn) {\n      await axios\n        .get(`${config.apiBaseUrl}/chat/fetchChats`, reqConfig)\n        .then((resp) => {\n          if (resp && resp.data && resp.data.data) {\n            const chats = [];\n            resp.data.data.forEach((chat) => {\n              const chatWith = chat.members.find((member) => member !== username);\n              chats.push({\n                chatId: chat._id,\n                chatWith: chatWith,\n              });\n            });\n            setChats(chats);\n          }\n        })\n        .catch((error) => {\n          const errorOptions = Utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  };\n\n  const fetchMessages = (chat) => {\n    const chatId = chat.chatId;\n    setChatId(chatId);\n    setSelectedChat(chat.chatWith);\n\n    if (isLoggedIn && chatId) {\n      socket.emit(\"fetchMessages\", chat);\n    }\n  };\n\n  const handleSelectChat = (chat, e) => {\n    e.preventDefault();\n    fetchMessages(chat);\n  };\n\n  const handleSetTab = (tab, e) => {\n    e.preventDefault();\n    setTab(tab);\n  };\n\n  return (\n    <>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Tab.Container id=\"list-group-tabs\">\n        <Row className={friends && friends.length ? \"tabs g-1\" : \"hide\"}>\n          {isMobile}\n          <Col sm={4} style={{ display: isMobile && selectedChat ? 'none' : 'block' }}>\n            <ListGroup>\n              <ListGroup.Item>\n                <ListGroup horizontal>\n                  <ListGroup.Item className={tab === 1 ? 'selected' : ''} action onClick={(e) => handleSetTab(1, e)}>\n                    Chats\n                  </ListGroup.Item>\n                  <ListGroup.Item className={tab === 2 ? 'selected' : ''} action onClick={(e) => handleSetTab(2, e)}>\n                    Friends\n                  </ListGroup.Item>\n                </ListGroup>\n              </ListGroup.Item>\n              {tab === 1 && (\n                <div className=\"chats-tab\">\n                  {chats.map((chat, key) => (\n                    <ListGroup.Item key={key} action href={chat.chatWith} onClick={(e) => handleSelectChat(chat, e)}>\n                      <img className=\"rounded-circle\" alt=\"profile\" src={require(\"../../assets/images/profile.png\")} width=\"50px\" data-holder-rendered=\"true\" />\n                      <span className=\"mg-l10 word-wrap\">{chat.chatWith}</span>\n                    </ListGroup.Item>\n                  ))}\n                </div>\n              )}\n              {tab === 2 && (\n                <div className=\"friends-tab\">\n                  {friends.map((friend, key) => (\n                    <ListGroup.Item key={key} action href={friend} onClick={(e) => handleSelectFriend(friend, e)}>\n                      <img className=\"rounded-circle\" alt=\"profile\" src={require(\"../../assets/images/profile.png\")} width=\"50px\" data-holder-rendered=\"true\" />\n                      <span className=\"mg-l10 word-wrap\">{friend}</span>\n                    </ListGroup.Item>\n                  ))}\n                </div>\n              )}\n            </ListGroup>\n          </Col>\n          <Col sm={8} style={{ display: isMobile && !selectedChat ? 'none' : 'block' }}>\n            {!selectedChat ? (\n              <h5 className=\"align-center\">\n                Choose a chat to start the conversation &nbsp;\n                <span className=\"emoji monkey\" role=\"img\" aria-label=\"monkey\"></span>\n              </h5>\n            ) : null}\n            <Tab.Content>\n              <Tab.Pane eventKey={selectedChat}>\n                <ChatBox chatId={chatId} chatWith={selectedChat} setSelectedChat={setSelectedChat} messages={messages} setMessages={setMessages} socket={socket} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n\n        <div className={friends && friends.length ? \"hide\" : \"container\"}>\n          {isLoggedIn ? (\n            <h5>\n              Hi there!{\" \"}\n              <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n                👋\n              </span>{\" \"}\n              Welcome to TextMe!!! <br /><br />\n              Add your first friend to get the fun started.\n            </h5>\n          ) : (\n            <h5>\n              Hi there!{\" \"}\n              <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n                👋\n              </span>{\" \"}\n              Welcome to TextMe!!!\n            </h5>\n          )}\n        </div>\n      </Tab.Container>\n    </>\n  );\n}\n\nexport default ChatTabs;\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { FcSearch } from \"react-icons/fc\";\n\nimport Toastr from \"../Toastr/Toastr\";\nimport config from \"../../configurations/config\";\nimport Utils from \"../../shared/Utils\";\nimport { FriendsContext } from \"../../context/FriendsContext\";\nimport \"./AddFriends.css\";\n\nfunction AddFriends(props) {\n  const { setUpdatedFriends } = useContext(FriendsContext);\n  const [search, setSearch] = useState();\n\n  const options = Utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  const handleSearch = () => {\n    setSearch(search);\n  };\n\n  const handleClose = () => {\n    setSearch(\"\");\n    props.onHide();\n  };\n\n  const handleAddFriend = async (username) => {\n    const access_token = Utils.getItemFromLocalStorage(\"access_token\");\n    const reqConfig = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${access_token}`,\n      },\n    };\n\n    const addUser = {\n      username: username,\n    };\n\n    await axios\n      .post(`${config.apiBaseUrl}/user/addFriend`, addUser, reqConfig)\n      .then((resp) => {\n        if (resp && resp.data) {\n          setUpdatedFriends(resp.data.data);\n          const successOptions = Utils.getSuccessToastrOptions(resp.data.message);\n          setToaster(successOptions);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Modal show={props.show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Friends</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ListGroup className={search ? \"add-friend\" : \"\"}>\n            <ListGroup.Item>\n              <InputGroup className=\"search\">\n                <Form.Control type=\"text\" placeholder=\"Search username...\" aria-label=\"Search username\" onChange={(e) => setSearch(e.target.value)} />\n                <Button variant=\"outline-secondary\" id=\"search\" onClick={handleSearch}>\n                  <FcSearch />\n                </Button>\n              </InputGroup>\n            </ListGroup.Item>\n            {props.users\n              .filter((usernames) => search && usernames.includes(search))\n              .map((user, key) => (\n                <ListGroup.Item key={key} className=\"users-list\">\n                  <span>{user}</span>\n                  <Button variant=\"primary\" onClick={() => handleAddFriend(user)}>\n                    Add\n                  </Button>\n                </ListGroup.Item>\n              ))}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddFriends;\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { HiUserAdd } from \"react-icons/hi\";\nimport { MdNotifications } from \"react-icons/md\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nimport AddFriends from \"../AddFriends/AddFriends\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Toastr from \"../Toastr/Toastr\";\nimport Utils from \"../../shared/Utils\";\nimport config from \"../../configurations/config\";\n\nfunction NavbarOffCanvas() {\n  const [show, setShow] = useState(false);\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\n  const shouldFetch = useRef(true); // useEffect runs twice thereby calling the api twice, this will avoid that\n\n  let options = Utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const current_user = JSON.parse(Utils.getItemFromLocalStorage('current_user'));\n\n  const handleOnShow = () => [setShow(true)];\n  const handleOnHide = () => [setShow(false)];\n\n  const handleOnHideToastr = () => {\n    setToaster(options);\n  };\n\n  const [navExpanded, setNavExpanded] = useState(false);\n  const closeNavBar = () => {\n    setNavExpanded(false);\n  }\n\n  const handleLogin = () => {\n    history.push(\"/login\");\n    closeNavBar();\n  }\n\n  const handleSignup = () => {\n    history.push(\"/signup\");\n    closeNavBar();\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    history.push(\"/login\");\n    Utils.logout();\n  }\n\n  useEffect(() => {\n    fetchAllUsers();\n  }, [isLoggedIn]);\n\n  const fetchAllUsers = async () => {\n    if (isLoggedIn && shouldFetch.current) {\n      shouldFetch.current = false;\n      const access_token = Utils.getItemFromLocalStorage(\"access_token\");\n\n      const reqConfig = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${access_token}`,\n        },\n      };\n\n      await axios\n        .get(`${config.apiBaseUrl}/user/fetchAllUsers`, reqConfig)\n        .then((resp) => {\n          if (resp && resp.data && resp.data.data) setUsers(resp.data.data);\n        })\n        .catch((error) => {\n          const errorOptions = Utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  }\n\n  const navigateTo = (path) => {\n    history.push(path);\n    closeNavBar();\n  }\n\n  return (\n    <>\n      <AddFriends show={show} users={users.length ? users : []} onHide={handleOnHide}></AddFriends>\n      <Toastr show={toastr.show} onHide={handleOnHideToastr} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n\n      {[\"md\"].map((expand) => (\n        <Navbar sticky=\"top\" bg=\"primary\" variant=\"dark\" key={expand} expand={expand} expanded={navExpanded}>\n          <Container fluid>\n            <Navbar.Brand href=\"#\">TextMe</Navbar.Brand>\n            {isLoggedIn ? (\n              <div>\n                <ButtonGroup aria-label=\"Controls\" style={{ marginRight: \"10px\" }}>\n                  <Button variant=\"primary\" onClick={handleOnShow}>\n                    <HiUserAdd size={28} />\n                  </Button>\n                  <Button variant=\"primary\">\n                    <MdNotifications size={28} />\n                  </Button>\n                </ButtonGroup>\n              </div>\n            ) : null}\n            <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} onClick={() => setNavExpanded(navExpanded ? false : \"expanded\")}/>\n            <Navbar.Offcanvas id={`offcanvasNavbar-expand-${expand}`} aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`} placement=\"end\">\n              <Offcanvas.Header>\n              <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>TextMe</Offcanvas.Title>\n              <AiOutlineClose className=\"pointer\" size={28} onClick={closeNavBar} />\n              </Offcanvas.Header>\n              <Offcanvas.Body>\n                <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                  <Nav.Link onClick={() => navigateTo('/')}>Home</Nav.Link>\n                  {/* <Nav.Link>Contact Us</Nav.Link> */}\n                  {isLoggedIn ? (\n                    <NavDropdown title={current_user.username} align=\"end\" id={`offcanvasNavbarDropdown-expand-${expand}`}>\n                      {/* <NavDropdown.Item>Update Profile</NavDropdown.Item>\n                      <NavDropdown.Item>Account Settings</NavDropdown.Item> */}\n                      {/* <NavDropdown.Divider /> */}\n                      <NavDropdown.Item onClick={handleLogout}>Logout</NavDropdown.Item>\n                    </NavDropdown>\n                  ) : (\n                    <>\n                      <Button variant=\"primary\" onClick={handleLogin}>Log in</Button>\n                      <Button variant=\"light\" onClick={handleSignup}>Sign up</Button>\n                    </>\n                  )}\n                </Nav>\n              </Offcanvas.Body>\n            </Navbar.Offcanvas>\n          </Container>\n        </Navbar>\n      ))}\n    </>\n  );\n}\n\nexport default NavbarOffCanvas;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\n\nimport Toastr from \"../Toastr/Toastr\";\nimport config from \"../../configurations/config\";\nimport Utils from \"../../shared/Utils\";\n\nimport \"../../App.css\";\n\nfunction Signup() {\n  const securityQs = [\n    {\n      value: 1,\n      label: \"What was your childhood nickname?\",\n    },\n    {\n      value: 2,\n      label: \"In what city did you meet your spouse/significant other?\",\n    },\n    {\n      value: 3,\n      label: \"What is the name of your favorite childhood friend?\",\n    },\n    {\n      value: 4,\n      label: \"What was the last name of your favorite childhood teacher?\",\n    },\n    {\n      value: 5,\n      label: \"What is the name of your youngest child?\",\n    },\n    {\n      value: 6,\n      label: \"What is your sibling’s birthday month and year?\",\n    },\n    {\n      value: 7,\n      label: \"What school did you attend for sixth grade?\",\n    },\n    {\n      value: 8,\n      label: \"What was the name of your first stuffed animal?\",\n    },\n    {\n      value: 9,\n      label: \"In what city or town did your mother and father meet?\",\n    },\n    {\n      value: 10,\n      label: \"What was your childhood phone number including area code?\",\n    },\n    {\n      value: 11,\n      label: \"Where were you when you had your first kiss?\",\n    },\n    {\n      value: 12,\n      label: \"What is the name of the place your wedding reception was held?\",\n    },\n    {\n      value: 13,\n      label: \"What time of the day were you born?\",\n    },\n    {\n      value: 14,\n      label: \"What are the last 4 digits of your credit/debit card?\",\n    },\n    {\n      value: 15,\n      label: \"What is your grandmother's first name?\",\n    },\n    {\n      value: 16,\n      label: \"What year did you graduate from High School?\",\n    },\n  ];\n\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [securityQ, setSecurityQ] = useState();\n  const [securityA, setSecurityA] = useState();\n\n  let options = Utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPasswordInput(event.target.value);\n    setPassword(event.target.value);\n  };\n\n  const togglePasswordType = () => {\n    if (passwordType === \"password\") {\n      setPasswordType(\"text\");\n    } else setPasswordType(\"password\");\n  };\n\n  const signupHandler = async (event) => {\n    event.preventDefault();\n\n    if (!username || !password) {\n      const errorOptions = Utils.getErrorToastrOptions(\"Error\", \"Username or Password can't be empty\");\n      setToaster(errorOptions);\n    } else {\n      const reqConfig = {\n        \"Content-type\": \"application/json\",\n      };\n\n      await axios\n        .post(`${config.apiBaseUrl}/user/signup`, { username, password, securityQ, securityA }, reqConfig)\n        .then((resp) => {\n          const successOptions = Utils.getSuccessToastrOptions(resp.data.message);\n          setToaster(successOptions);\n        })\n        .catch((error) => {\n          const errorOptions = Utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  };\n\n  return (\n    <Container>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Row>\n        <Col className=\"container d-inline-flex align-items-center justify-content-center\">\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter Username\" onChange={(e) => setUsername(e.target.value)} />\n              <Form.Text id=\"usernameHelp\" muted>\n                Username should be unique\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <InputGroup>\n                <Form.Control type={passwordType} onChange={handlePasswordChange} value={passwordInput} placeholder=\"Password\" />\n                <Button variant=\"outline-secondary\" id=\"search\" onClick={togglePasswordType}>\n                  {passwordType === \"password\" ? <BsEyeSlash /> : <BsEye />}\n                </Button>\n              </InputGroup>\n            </Form.Group>\n\n            <Form.Group className=\"mb-1\" controlId=\"securityQ\">\n              <Form.Label style={{ paddingRight: \"2px\" }}>Select a security question</Form.Label>\n              <Form.Text id=\"passwordResetHelp\" muted>\n                (This will be used for password recovery)\n              </Form.Text>\n              <Form.Select className=\"mb-2\" aria-label=\"Security Question\" onChange={(e) => setSecurityQ(e.target.value)} defaultValue=\"Open this select menu\">\n                <option disabled>Open this select menu</option>\n                {securityQs.map((ques, key) => {\n                  return (\n                    <option key={key} value={ques.value}>\n                      {ques.label}\n                    </option>\n                  );\n                })}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"securityA\">\n              <Form.Control type=\"text\" placeholder=\"Answer\" onChange={(e) => setSecurityA(e.target.value)} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"Submit\" onClick={signupHandler}>\n              Signup\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { AuthContext } from \"../../context/AuthContext\";\nimport config from \"../../configurations/config\";\nimport Toastr from \"../Toastr/Toastr\";\nimport Utils from \"../../shared/Utils\";\nimport \"../../App.css\";\n\nfunction Login() {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const { setIsLoggedIn } = useContext(AuthContext);\n\n  let options = Utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  const history = useHistory();\n\n  const loginHandler = async (event) => {\n    event.preventDefault();\n\n    if (!username || !password) {\n      const errorOptions = Utils.getErrorToastrOptions(\"Error\", \"Username or Password can't be empty\");\n      setToaster(errorOptions);\n    } else {\n      const reqConfig = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n      };\n\n      await axios\n        .post(`${config.apiBaseUrl}/user/login`, { username, password }, reqConfig)\n        .then((resp) => {\n          if (resp.data.data) {\n            Utils.setItemToLocalStorage(\"access_token\", resp.data.data.access_token);\n            Utils.setItemToLocalStorage(\"current_user\", JSON.stringify(resp.data.data.current_user));\n            Utils.setItemToLocalStorage(\"isLoggedIn\", true);\n            setIsLoggedIn(true);\n            history.push(\"/chats\");\n          }\n        })\n        .catch((error) => {\n          const errorOptions = Utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  };\n\n  return (\n    <Container>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Row>\n        <Col className=\"container d-inline-flex align-items-center justify-content-center\">\n          <Form style={{ width: \"20em\" }}>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(e) => setUsername(e.target.value)} />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"Submit\" onClick={loginHandler}>\n              Login\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Homepage() {\n  const { isLoggedIn } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleGoToChats = () => {\n    history.push(\"/chats\");\n  };\n\n  return (\n    <div className=\"container\">\n      {isLoggedIn ? (\n        <h5>\n          Hi there!{\" \"}\n          <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n            👋\n          </span>{\" \"}\n          Welcome to TextMe!!! <br />\n          <Button variant=\"primary\" className=\"mt-3\" onClick={handleGoToChats}>\n            Go to Chats <AiOutlineArrowRight />\n          </Button>\n        </h5>\n      ) : (\n        <h5>\n          Hi there!{\" \"}\n          <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n            👋\n          </span>{\" \"}\n          Welcome to TextMe!!!\n        </h5>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ChatTabs from \"./components/ChatTabs/ChatTabs\";\nimport NavbarOffCanvas from \"./components/Navbar/Navbar\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\n\nimport { FriendsContextProvider } from \"./context/FriendsContext\";\nimport \"./App.css\";\nimport Homepage from \"./components/Home/Homepage\";\n\nfunction App() {\n  return (\n    <FriendsContextProvider>\n      <Router>\n        <NavbarOffCanvas />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage}>\n            <Homepage />\n          </Route>\n          <Route exact path=\"/signup\" component={Signup}>\n            <Signup />\n          </Route>\n          <Route exact path=\"/login\" component={Login}>\n            <Login />\n          </Route>\n          <Route exact path=\"/chats\" component={ChatTabs}>\n            <ChatTabs/>\n          </Route>\n        </Switch>\n      </Router>\n    </FriendsContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthContextProvider } from \"./context/AuthContext\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n);\n"],"sourceRoot":""}