{"version":3,"sources":["assets/images/profile.png","shared/Utils.js","context/AuthContext.js","components/Toastr/Toastr.js","components/ChatBox/ChatBox.js","configurations/config.js","context/FriendsContext.js","components/ChatTabs/ChatTabs.js","components/AddFriends/AddFriends.js","components/Navbar/Navbar.js","components/Signup/Signup.js","components/Login/Login.js","components/Home/Homepage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Utils","setItemToLocalStorage","key","value","localStorage","setItem","getItemFromLocalStorage","getItem","getDefaultToastrOptions","show","variant","title","message","getSuccessToastrOptions","getErrorToastrOptions","logout","clear","AuthContext","createContext","AuthContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","username","setUsername","current_user","JSON","parse","react_default","a","createElement","Provider","children","Toastr","ToastContainer","position","className","Toast","onClose","onHide","delay","autohide","bg","toLowerCase","Header","src","alt","Body","ChatBox","typingTimer","useContext","setMessage","typingStatus","setTypingStatus","options","utils","_useState5","_useState6","toastr","setToaster","lastMessageRef","useRef","useEffect","current","scrollIntoView","behavior","messages","socket","on","typingData","clearTimeout","setTimeout","Fragment","Toastr_Toastr","Card","Button","onClick","setSelectedChat","io_index_esm","size","chatWith","ButtonGroup","aria-label","index_esm","color","fc_index_esm","map","msg","ListGroup","from","Item","to","text","ref","Footer","Form","InputGroup","bi_index_esm","gr_index_esm","Control","placeholder","onChange","e","target","onKeyDown","concat","emit","type","id","preventDefault","messageReq","chatId","handleSendMessage","config","apiBaseUrl","FriendsContext","FriendsContextProvider","updatedFriends","setUpdatedFriends","io","connect","transports","upgrade","ChatTabs","friends","setFriends","chats","setChats","setMessages","_useState7","_useState8","newMessage","setNewMessage","_useState9","_useState10","tab","setTab","_useState11","_useState12","selectedChat","_useState13","_useState14","setChatId","_useState15","window","innerWidth","_useState16","width","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","access_token","reqConfig","headers","Content-type","Authorization","shouldFetch","history","useHistory","_useState17","_useState18","auth","fetchChats","fetchFriends","prev","toConsumableArray","axios","get","then","resp","data","catch","error","errorOptions","response","push","forEach","chat","members","find","member","_id","fetchMessages","handleSetTab","Tab","Container","Row","length","Col","sm","style","display","horizontal","action","href","handleSelectChat","require","data-holder-rendered","friend","chatReq","post","chatRes","console","handleSelectFriend","role","Content","Pane","eventKey","ChatBox_ChatBox","AddFriends","search","setSearch","handleClose","Modal","closeButton","Title","users","filter","usernames","includes","user","addUser","successOptions","log","handleAddFriend","NavbarOffCanvas","setShow","setUsers","_useContext","handleOnShow","handleLogin","handleSignup","handleLogout","components_AddFriends_AddFriends","expand","Navbar","sticky","fluid","Brand","marginRight","hi_index_esm","Toggle","aria-controls","Offcanvas","aria-labelledby","placement","Nav","Link","path","NavDropdown","align","Divider","Signup","passwordType","setPasswordType","passwordInput","setPasswordInput","password","setPassword","securityQ","setSecurityQ","securityA","setSecurityA","Group","controlId","Label","Text","muted","event","bs_index_esm","paddingRight","Select","selected","disabled","label","ques","Login","stringify","Homepage","ai_index_esm","App","FriendsContext_FriendsContextProvider","react_router_dom","Navbar_Navbar","react_router","exact","component","Signup_Signup","Login_Login","components_ChatTabs_ChatTabs","ReactDOM","createRoot","document","getElementById","render","AuthContext_AuthContextProvider","src_App"],"mappings":"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","file":"static/js/main.ad9ebb15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.2a2b6c5a.png\";","export default {\n  setItemToLocalStorage: (key, value) => {\n    localStorage.setItem(key, value);\n  },\n\n  getItemFromLocalStorage: (key) => {\n    return localStorage.getItem(key);\n  },\n\n  getDefaultToastrOptions: () => {\n    const options = {\n      show: false,\n      variant: \"\",\n      title: \"\",\n      message: \"\",\n    };\n    return options;\n  },\n\n  getSuccessToastrOptions: (message) => {\n    const options = {\n      show: true,\n      variant: \"Success\",\n      title: \"Success\",\n      message: message,\n    };\n    return options;\n  },\n\n  getErrorToastrOptions: (title, message) => {\n    const options = {\n      show: true,\n      variant: \"Danger\",\n      title: title,\n      message: message,\n    };\n    return options;\n  },\n\n  logout: () => {\n    localStorage.clear();\n  }\n};\n","import React, { createContext, useState } from \"react\";\nimport Utils from \"../shared/Utils\";\n\nexport const AuthContext = createContext([]);\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState(null);\n\n  // reloading page loses isLoggedIn context value therefore, check for isLoggedIn stored in localStorage\n  if (!isLoggedIn && Utils.getItemFromLocalStorage(\"isLoggedIn\")) {\n    const current_user = JSON.parse(Utils.getItemFromLocalStorage(\"current_user\"));\n    setIsLoggedIn(true);\n    setUsername(current_user.username);\n  }\n\n  return (\n  <AuthContext.Provider value={{isLoggedIn, setIsLoggedIn, username}}>\n    {props.children}\n  </AuthContext.Provider>\n  );\n};","import React from \"react\";\n\nimport ToastContainer from \"react-bootstrap/ToastContainer\";\nimport Toast from \"react-bootstrap/Toast\";\n\nfunction Toastr(props) {\n  const handleClose = () => {\n    props.onHide();\n  };\n\n  return (\n    <ToastContainer position=\"top-end\" className=\"p-3\">\n      <Toast show={props.show} onClose={handleClose} delay={5000} autohide className=\"d-inline-block m-1\" bg={props.variant.toLowerCase()}>\n        <Toast.Header>\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\n          <strong className=\"me-auto\">{props.title}</strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">{props.message}</Toast.Body>\n      </Toast>\n    </ToastContainer>\n  );\n}\n\nexport default Toastr;\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { MdCall } from \"react-icons/md\";\nimport { FcVideoCall } from \"react-icons/fc\";\nimport { BiSmile } from \"react-icons/bi\";\nimport { GrAttachment } from \"react-icons/gr\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Toastr from \"../Toastr/Toastr\";\nimport utils from \"../../shared/Utils\";\n\nimport \"./ChatBox.css\";\n\nexport default function ChatBox(props) {\n  const { isLoggedIn } = useContext(AuthContext);\n  const { username } = useContext(AuthContext);\n  const [message, setMessage] = useState(\"\");\n  const [typingStatus, setTypingStatus] = useState(\"\");\n\n  const options = utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n  const lastMessageRef = useRef(null);\n  let typingTimer;\n\n  const handleTyping = () => {\n    let typingData = {\n      text: `${username} is typing...`,\n      from: username,\n      to: props.chatWith\n    }\n    props.socket.emit('typing', typingData);\n  }\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n\n    if (isLoggedIn && message) {\n      const messageReq = {\n        chatId: props.chatId,\n        message: message,\n        from: username,\n        to: props.chatWith\n      };\n\n      props.socket.emit(\"sendMessage\", messageReq);\n      setMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    // scroll to bottom every time messages change\n    lastMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [props.messages]);\n\n  useEffect(() => {\n    props.socket.on('typingStatus', (typingData) => {\n      clearTimeout(typingTimer);\n      setTypingStatus(typingData);\n      typingTimer = setTimeout(() => {\n        setTypingStatus(\"\");\n      }, 1000);\n    });\n    lastMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [typingStatus]);\n\n  return (\n    <>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n\n      <Card className=\"box\">\n        <Card.Header className=\"d-flex align-items-center justify-content-between\">\n          <div className=\"flex\">\n            <Button className=\"back-btn\" variant=\"light\" onClick={() => props.setSelectedChat(null)}>\n              <IoMdArrowRoundBack size={30} />\n            </Button>\n            <h4 className=\"word-wrap\">{props.chatWith}</h4>\n          </div>\n          <div>\n            <ButtonGroup aria-label=\"Call\">\n              <Button variant=\"light\">\n                <MdCall color=\"rgb(76, 175, 80)\" size={25} />\n              </Button>\n              <Button variant=\"light\">\n                <FcVideoCall size={30} />\n              </Button>\n            </ButtonGroup>\n          </div>\n        </Card.Header>\n        <Card.Body className=\"overflow-auto chat-box\">\n          {props.messages.map((msg, key) => (\n            <ListGroup key={key} className={msg.from === username ? \"align-items-end mb-2\" : \"align-items-start mb-2\"}>\n              <ListGroup.Item variant={msg.from === username ? \"primary\" : \"\"} key={key}>\n                {msg.message}\n              </ListGroup.Item>\n              {/* <span>{new Date(msg.createdAt).toDateString()}</span> */}\n            </ListGroup>\n          ))}\n          {\n            props.chatWith === typingStatus.from && username === typingStatus.to ? <span className=\"typing\">{typingStatus.text}</span> : <span></span>\n          }\n          <div ref={lastMessageRef}></div>\n        </Card.Body>\n        <Card.Footer>\n          <Form>\n            <InputGroup>\n              <Button variant=\"outline-secondary\">\n                <BiSmile size={20} />\n              </Button>\n              <Button variant=\"outline-secondary\">\n                <GrAttachment size={17} />\n              </Button>\n              <Form.Control placeholder=\"Enter message...\" aria-label=\"Enter message\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={handleTyping} />\n              <Button type=\"Submit\" variant=\"primary\" id=\"send\" onClick={(e) => handleSendMessage(e)}>\n                Send\n              </Button>\n            </InputGroup>\n          </Form>\n        </Card.Footer>\n      </Card>\n    </>\n  );\n}\n","export default {\n    apiBaseUrl: \"https://textme.up.railway.app/api\"\n}","import React, { createContext, useState } from \"react\";\n\nexport const FriendsContext = createContext([]);\n\nexport const FriendsContextProvider = (props) => {\n  const [updatedFriends, setUpdatedFriends] = useState(null);\n\n  return (\n  <FriendsContext.Provider value={{updatedFriends, setUpdatedFriends}}>\n    {props.children}\n  </FriendsContext.Provider>\n  );\n};\n\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport io from \"socket.io-client\";\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\n\nimport ChatBox from \"../ChatBox/ChatBox\";\nimport Toastr from \"../Toastr/Toastr\";\nimport utils from \"../../shared/Utils\";\nimport config from \"../../configurations/config\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { FriendsContext } from \"../../context/FriendsContext\";\nimport \"./ChatTabs.css\";\n\nconst socket = io.connect(\"https://textme.up.railway.app/\", { transports: ['websocket'], upgrade: false });\n\nfunction ChatTabs() {\n  const [friends, setFriends] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState([]);\n  const [tab, setTab] = useState(1);\n  const [selectedChat, setSelectedChat] = useState();\n  const [chatId, setChatId] = useState();\n  const { updatedFriends } = useContext(FriendsContext);\n  const { isLoggedIn } = useContext(AuthContext);\n  const { username } = useContext(AuthContext);\n  const [width, setWidth] = useState(window.innerWidth);\n\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    }\n  }, [width]);\n\n  const isMobile = width <= 576;\n\n  const access_token = utils.getItemFromLocalStorage(\"access_token\");\n\n  const reqConfig = {\n    headers: {\n      \"Content-type\": \"application/json\",\n      Authorization: `Bearer ${access_token}`,\n    },\n  };\n\n  const shouldFetch = useRef(true);\n  const history = useHistory();\n\n  const options = utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  if (updatedFriends && updatedFriends !== friends) {\n    setFriends(updatedFriends);\n  }\n\n  useEffect(() => {\n    socket.auth = { username };\n  }, [username]);\n\n  useEffect(() => {\n    if (isLoggedIn && shouldFetch.current) {\n      shouldFetch.current = false;\n      fetchChats();\n      fetchFriends();\n    }\n\n    socket.on(\"fetchMessages\", (messages) => {\n      setMessages(messages);\n    })\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"newMessageReceived\", (newMessage) => {\n      setNewMessage(newMessage);\n    })\n  }, [messages]);\n\n  useEffect(() => {\n    if (newMessage && newMessage.from === selectedChat) setMessages((prev) => [...prev, newMessage]);\n  }, [newMessage]);\n\n  const handleSelectFriend = (friend, e) => {\n    e.preventDefault();\n\n    if (isLoggedIn) {\n      const chatReq = {\n        members: [friend, username],\n      };\n\n      axios\n        .post(`${config.apiBaseUrl}/chat/createChat`, chatReq, reqConfig)\n        .then(\n          (resp) => {\n            if (resp && resp.data && resp.data.data) {\n              const chatRes = resp.data.data;\n              fetchChats();\n\n              const chatWith = chatRes.members.find((member) => member !== username);\n              setSelectedChat(chatWith);\n              setTab(1); // Clicking on friend should open the chat with them\n\n              const chat = {\n                chatId: chatRes._id,\n                chatWith\n              }\n              fetchMessages(chat);\n            }\n          },\n          (error) => {\n            const errorOptions = utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n            setToaster(errorOptions);\n          }\n        )\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  const fetchFriends = () => {\n    axios\n      .get(`${config.apiBaseUrl}/user/fetchFriends`, reqConfig)\n      .then((resp) => {\n        if (resp && resp.data && resp.data.data) {\n          setFriends(resp.data.data);\n        }\n      })\n      .catch((error) => {\n        const errorOptions = utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n        setToaster(errorOptions);\n        history.push(\"/login\");\n        utils.logout();\n      });\n  };\n\n  const fetchChats = () => {\n    if (isLoggedIn) {\n      axios\n        .get(`${config.apiBaseUrl}/chat/fetchChats`, reqConfig)\n        .then((resp) => {\n          if (resp && resp.data && resp.data.data) {\n            const chats = [];\n            resp.data.data.forEach((chat) => {\n              const chatWith = chat.members.find((member) => member !== username);\n              chats.push({\n                chatId: chat._id,\n                chatWith: chatWith,\n              });\n            });\n            setChats(chats);\n          }\n        })\n        .catch((error) => {\n          const errorOptions = utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  };\n\n  const fetchMessages = (chat) => {\n    const chatId = chat.chatId;\n    setChatId(chatId);\n    setSelectedChat(chat.chatWith);\n\n    if (isLoggedIn && chatId) {\n      socket.emit(\"fetchMessages\", chat);\n    }\n  };\n\n  const handleSelectChat = (chat, e) => {\n    e.preventDefault();\n    fetchMessages(chat);\n  };\n\n  const handleSetTab = (tab, e) => {\n    e.preventDefault();\n    setTab(tab);\n  };\n\n  return (\n    <>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Tab.Container id=\"list-group-tabs\">\n        <Row className={friends && friends.length ? \"tabs g-1\" : \"hide\"}>\n          {isMobile}\n          <Col sm={4} style={{ display: isMobile && selectedChat ? 'none' : 'block' }}>\n            <ListGroup>\n              <ListGroup.Item>\n                <ListGroup horizontal>\n                  <ListGroup.Item action onClick={(e) => handleSetTab(1, e)}>\n                    Chats\n                  </ListGroup.Item>\n                  <ListGroup.Item action onClick={(e) => handleSetTab(2, e)}>\n                    Friends\n                  </ListGroup.Item>\n                </ListGroup>\n              </ListGroup.Item>\n              {tab === 1 && (\n                <div className=\"chats-tab\">\n                  {chats.map((chat, key) => (\n                    <ListGroup.Item key={key} action href={chat.chatWith} onClick={(e) => handleSelectChat(chat, e)}>\n                      <img className=\"rounded-circle\" alt=\"profile\" src={require(\"../../assets/images/profile.png\")} width=\"50px\" data-holder-rendered=\"true\" />\n                      <span className=\"mg-l10 word-wrap\">{chat.chatWith}</span>\n                    </ListGroup.Item>\n                  ))}\n                </div>\n              )}\n              {tab === 2 && (\n                <div className=\"friends-tab\">\n                  {friends.map((friend, key) => (\n                    <ListGroup.Item key={key} action href={friend} onClick={(e) => handleSelectFriend(friend, e)}>\n                      <img className=\"rounded-circle\" alt=\"profile\" src={require(\"../../assets/images/profile.png\")} width=\"50px\" data-holder-rendered=\"true\" />\n                      <span className=\"mg-l10 word-wrap\">{friend}</span>\n                    </ListGroup.Item>\n                  ))}\n                </div>\n              )}\n            </ListGroup>\n          </Col>\n          <Col sm={8} style={{ display: isMobile && !selectedChat ? 'none' : 'block' }}>\n            {!selectedChat ? (\n              <h5 className=\"align-center\">\n                Choose a chat to start the conversation\n                <span className=\"emoji monkey\" role=\"img\" aria-label=\"monkey\"></span>\n              </h5>\n            ) : null}\n            <Tab.Content>\n              <Tab.Pane eventKey={selectedChat}>\n                <ChatBox chatId={chatId} chatWith={selectedChat} setSelectedChat={setSelectedChat} messages={messages} setMessages={setMessages} socket={socket} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n\n        <div className={friends && friends.length ? \"hide\" : \"container\"}>\n          {isLoggedIn ? (\n            <h5>\n              Hi there!{\" \"}\n              <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n                👋\n              </span>{\" \"}\n              Welcome to TextMe!!! <br />\n              Add your first friend to get the fun started.\n            </h5>\n          ) : (\n            <h5>\n              Hi there!{\" \"}\n              <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n                👋\n              </span>{\" \"}\n              Welcome to TextMe!!!\n            </h5>\n          )}\n        </div>\n      </Tab.Container>\n    </>\n  );\n}\n\nexport default ChatTabs;\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { FcSearch } from \"react-icons/fc\";\n\nimport Toastr from \"../Toastr/Toastr\";\nimport config from \"../../configurations/config\";\nimport utils from \"../../shared/Utils\";\nimport { FriendsContext } from \"../../context/FriendsContext\";\nimport \"./AddFriends.css\";\n\nfunction AddFriends(props) {\n  const { setUpdatedFriends } = useContext(FriendsContext);\n  const [search, setSearch] = useState();\n\n  const options = utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  const handleSearch = () => {\n    setSearch(search);\n  };\n\n  const handleClose = () => {\n    setSearch(\"\");\n    props.onHide();\n  };\n\n  const handleAddFriend = (username) => {\n    const access_token = utils.getItemFromLocalStorage(\"access_token\");\n    const reqConfig = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${access_token}`,\n      },\n    };\n\n    const addUser = {\n      username: username,\n    };\n\n    axios\n      .post(`${config.apiBaseUrl}/user/addFriend`, addUser, reqConfig)\n      .then((resp) => {\n        if (resp && resp.data) {\n          setUpdatedFriends(resp.data.data);\n          const successOptions = utils.getSuccessToastrOptions(resp.data.message);\n          setToaster(successOptions);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Modal show={props.show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Friends</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ListGroup className={search ? \"add-friend\" : \"\"}>\n            <ListGroup.Item>\n              <InputGroup className=\"search\">\n                <Form.Control type=\"text\" placeholder=\"Search username...\" aria-label=\"Search username\" onChange={(e) => setSearch(e.target.value)} />\n                <Button variant=\"outline-secondary\" id=\"search\" onClick={handleSearch}>\n                  <FcSearch />\n                </Button>\n              </InputGroup>\n            </ListGroup.Item>\n            {props.users\n              .filter((usernames) => search && usernames.includes(search))\n              .map((user, key) => (\n                <ListGroup.Item key={key} className=\"users-list\">\n                  <span>{user}</span>\n                  <Button variant=\"primary\" onClick={() => handleAddFriend(user)}>\n                    Add\n                  </Button>\n                </ListGroup.Item>\n              ))}\n          </ListGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddFriends;\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { HiUserAdd } from \"react-icons/hi\";\nimport { MdNotifications } from \"react-icons/md\";\n\nimport AddFriends from \"../AddFriends/AddFriends\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport Toastr from \"../Toastr/Toastr\";\nimport utils from \"../../shared/Utils\";\nimport config from \"../../configurations/config\";\n\nfunction NavbarOffCanvas() {\n  const [show, setShow] = useState(false);\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\n  const shouldFetch = useRef(true); // useEffect runs twice thereby calling the api twice, this will avoid that\n\n  let options = utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const current_user = JSON.parse(utils.getItemFromLocalStorage('current_user'));\n  \n  const handleOnShow = () => [setShow(true)];\n  const handleOnHide = () => [setShow(false)];\n\n  const handleOnHideToastr = () => {\n    setToaster(options);\n  };\n\n  const handleLogin = () => {\n    history.push(\"/login\");\n  }\n\n  const handleSignup = () => {\n    history.push(\"/signup\");\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    history.push(\"/login\");\n    utils.logout();\n  }\n\n  useEffect(() => {\n    if (isLoggedIn && shouldFetch.current) {\n      shouldFetch.current = false;\n      const access_token = utils.getItemFromLocalStorage(\"access_token\");\n\n      const reqConfig = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${access_token}`,\n        },\n      };\n\n      axios\n        .get(`${config.apiBaseUrl}/user/fetchAllUsers`, reqConfig)\n        .then((resp) => {\n          if (resp && resp.data && resp.data.data) setUsers(resp.data.data);\n        })\n        .catch((error) => {\n          const errorOptions = utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  }, [isLoggedIn]);\n\n  const navigateTo = (path) => {\n    history.push(path);\n  }\n\n  return (\n    <>\n      <AddFriends show={show} users={users.length ? users : []} onHide={handleOnHide}></AddFriends>\n      <Toastr show={toastr.show} onHide={handleOnHideToastr} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n\n      {[\"md\"].map((expand) => (\n        <Navbar sticky=\"top\" bg=\"primary\" variant=\"dark\" key={expand} expand={expand}>\n          <Container fluid>\n            <Navbar.Brand href=\"#\">TextMe</Navbar.Brand>\n            {isLoggedIn ? (\n              <div>\n                <ButtonGroup aria-label=\"Controls\" style={{ marginRight: \"10px\" }}>\n                  <Button variant=\"primary\" onClick={handleOnShow}>\n                    <HiUserAdd size={28} />\n                  </Button>\n                  <Button variant=\"primary\">\n                    <MdNotifications size={28} />\n                  </Button>\n                </ButtonGroup>\n              </div>\n            ) : null}\n            <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} />\n            <Navbar.Offcanvas id={`offcanvasNavbar-expand-${expand}`} aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`} placement=\"end\">\n              <Offcanvas.Header closeButton>\n                <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>Offcanvas</Offcanvas.Title>\n              </Offcanvas.Header>\n              <Offcanvas.Body>\n                <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                  <Nav.Link onClick={() => navigateTo('/')}>Home</Nav.Link>\n                  <Nav.Link>Contact Us</Nav.Link>\n                  {isLoggedIn ? (\n                    <NavDropdown title={current_user.username} align=\"end\" id={`offcanvasNavbarDropdown-expand-${expand}`}>\n                      <NavDropdown.Item>Update Profile</NavDropdown.Item>\n                      <NavDropdown.Item>Account Settings</NavDropdown.Item>\n                      <NavDropdown.Divider />\n                      <NavDropdown.Item onClick={handleLogout}>Logout</NavDropdown.Item>\n                    </NavDropdown>\n                  ) : (\n                    <>\n                      <Button variant=\"primary\" onClick={handleLogin}>Log in</Button>\n                      <Button variant=\"light\" onClick={handleSignup}>Sign up</Button>\n                    </>\n                  )}\n                </Nav>\n              </Offcanvas.Body>\n            </Navbar.Offcanvas>\n          </Container>\n        </Navbar>\n      ))}\n    </>\n  );\n}\n\nexport default NavbarOffCanvas;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\n\nimport Toastr from \"../Toastr/Toastr\";\nimport config from \"../../configurations/config\";\nimport utils from \"../../shared/Utils\";\n\nimport \"../../App.css\";\n\nfunction Signup() {\n  const securityQs = [\n    {\n      value: 1,\n      label: \"What was your childhood nickname?\",\n    },\n    {\n      value: 2,\n      label: \"In what city did you meet your spouse/significant other?\",\n    },\n    {\n      value: 3,\n      label: \"What is the name of your favorite childhood friend?\",\n    },\n    {\n      value: 4,\n      label: \"What was the last name of your favorite childhood teacher?\",\n    },\n    {\n      value: 5,\n      label: \"What is the name of your youngest child?\",\n    },\n    {\n      value: 6,\n      label: \"What is your sibling’s birthday month and year?\",\n    },\n    {\n      value: 7,\n      label: \"What school did you attend for sixth grade?\",\n    },\n    {\n      value: 8,\n      label: \"What was the name of your first stuffed animal?\",\n    },\n    {\n      value: 9,\n      label: \"In what city or town did your mother and father meet?\",\n    },\n    {\n      value: 10,\n      label: \"What was your childhood phone number including area code?\",\n    },\n    {\n      value: 11,\n      label: \"Where were you when you had your first kiss?\",\n    },\n    {\n      value: 12,\n      label: \"What is the name of the place your wedding reception was held?\",\n    },\n    {\n      value: 13,\n      label: \"What time of the day were you born?\",\n    },\n    {\n      value: 14,\n      label: \"What are the last 4 digits of your credit/debit card?\",\n    },\n    {\n      value: 15,\n      label: \"What is your grandmother's first name?\",\n    },\n    {\n      value: 16,\n      label: \"What year did you graduate from High School?\",\n    },\n  ];\n\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [securityQ, setSecurityQ] = useState();\n  const [securityA, setSecurityA] = useState();\n\n  let options = utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPasswordInput(event.target.value);\n    setPassword(event.target.value);\n  };\n\n  const togglePasswordType = () => {\n    if (passwordType === \"password\") {\n      setPasswordType(\"text\");\n    } else setPasswordType(\"password\");\n  };\n\n  const signupHandler = (event) => {\n    event.preventDefault();\n\n    if (!username || !password) {\n      const errorOptions = utils.getErrorToastrOptions(\"Error\", \"Username or Password can't be empty\");\n      setToaster(errorOptions);\n    } else {\n      const reqConfig = {\n        \"Content-type\": \"application/json\",\n      };\n\n      axios\n        .post(`${config.apiBaseUrl}/user/signup`, { username, password, securityQ, securityA }, reqConfig)\n        .then((resp) => {\n          const successOptions = utils.getSuccessToastrOptions(resp.data.message);\n          setToaster(successOptions);\n        })\n        .catch((error) => {\n          const errorOptions = utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  };\n\n  return (\n    <Container>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Row>\n        <Col className=\"container d-inline-flex align-items-center justify-content-center\">\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter Username\" onChange={(e) => setUsername(e.target.value)} />\n              <Form.Text id=\"usernameHelp\" muted>\n                Username should be unique\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <InputGroup>\n                <Form.Control type={passwordType} onChange={handlePasswordChange} value={passwordInput} placeholder=\"Password\" />\n                <Button variant=\"outline-secondary\" id=\"search\" onClick={togglePasswordType}>\n                  {passwordType === \"password\" ? <BsEyeSlash /> : <BsEye />}\n                </Button>\n              </InputGroup>\n            </Form.Group>\n\n            <Form.Group className=\"mb-1\" controlId=\"securityQ\">\n              <Form.Label style={{ paddingRight: \"2px\" }}>Select a security question</Form.Label>\n              <Form.Text id=\"passwordResetHelp\" muted>\n                (This will be used for password recovery)\n              </Form.Text>\n              <Form.Select className=\"mb-2\" aria-label=\"Security Question\" onChange={(e) => setSecurityQ(e.target.value)}>\n                <option selected=\"true\" disabled=\"true\">Open this select menu</option>\n                {securityQs.map((ques, key) => {\n                  return (\n                    <option key={key} value={ques.value}>\n                      {ques.label}\n                    </option>\n                  );\n                })}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"securityA\">\n              <Form.Control type=\"text\" placeholder=\"Answer\" onChange={(e) => setSecurityA(e.target.value)} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"Submit\" onClick={signupHandler}>\n              Signup\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { AuthContext } from \"../../context/AuthContext\";\nimport config from \"../../configurations/config\";\nimport Toastr from \"../Toastr/Toastr\";\nimport utils from \"../../shared/Utils\";\nimport \"../../App.css\";\n\nfunction Login() {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const { setIsLoggedIn } = useContext(AuthContext);\n\n  let options = utils.getDefaultToastrOptions();\n  const [toastr, setToaster] = useState(options);\n\n  const handleOnHide = () => {\n    setToaster(options);\n  };\n\n  const history = useHistory();\n\n  const loginHandler = (event) => {\n    event.preventDefault();\n\n    if (!username || !password) {\n      const errorOptions = utils.getErrorToastrOptions(\"Error\", \"Username or Password can't be empty\");\n      setToaster(errorOptions);\n    } else {\n      const reqConfig = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n      };\n\n      axios\n        .post(`${config.apiBaseUrl}/user/login`, { username, password }, reqConfig)\n        .then((resp) => {\n          if (resp.data.data) {\n            utils.setItemToLocalStorage(\"access_token\", resp.data.data.access_token);\n            utils.setItemToLocalStorage(\"current_user\", JSON.stringify(resp.data.data.current_user));\n            utils.setItemToLocalStorage(\"isLoggedIn\", true);\n            setIsLoggedIn(true);\n            history.push(\"/chats\");\n          }\n        })\n        .catch((error) => {\n          const errorOptions = utils.getErrorToastrOptions(error.response.data.error, error.response.data.message);\n          setToaster(errorOptions);\n        });\n    }\n  };\n\n  return (\n    <Container>\n      <Toastr show={toastr.show} onHide={handleOnHide} variant={toastr.variant} title={toastr.title} message={toastr.message} />\n      <Row>\n        <Col className=\"container d-inline-flex align-items-center justify-content-center\">\n          <Form style={{ width: \"20em\" }}>\n            <Form.Group className=\"mb-3\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(e) => setUsername(e.target.value)} />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"Submit\" onClick={loginHandler}>\n              Login\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Homepage() {\n  const { isLoggedIn } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleGoToChats = () => {\n    history.push(\"/chats\");\n  };\n\n  return (\n    <div className=\"container\">\n      {isLoggedIn ? (\n        <h5>\n          Hi there!{\" \"}\n          <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n            👋\n          </span>{\" \"}\n          Welcome to TextMe!!! <br />\n          <Button variant=\"primary\" className=\"mt-3\" onClick={handleGoToChats}>\n            Go to Chats <AiOutlineArrowRight />\n          </Button>\n        </h5>\n      ) : (\n        <h5>\n          Hi there!{\" \"}\n          <span role=\"img\" aria-label=\"wave\" className=\"wave\">\n            👋\n          </span>{\" \"}\n          Welcome to TextMe!!!\n        </h5>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ChatTabs from \"./components/ChatTabs/ChatTabs\";\nimport NavbarOffCanvas from \"./components/Navbar/Navbar\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\n\nimport { FriendsContextProvider } from \"./context/FriendsContext\";\nimport \"./App.css\";\nimport Homepage from \"./components/Home/Homepage\";\n\nfunction App() {\n  return (\n    <FriendsContextProvider>\n      <Router>\n        <NavbarOffCanvas />\n        <Switch>\n          <Route exact path=\"/\" component={Homepage}>\n            <Homepage />\n          </Route>\n          <Route exact path=\"/signup\" component={Signup}>\n            <Signup />\n          </Route>\n          <Route exact path=\"/login\" component={Login}>\n            <Login />\n          </Route>\n          <Route exact path=\"/chats\" component={ChatTabs}>\n            <ChatTabs/>\n          </Route>\n        </Switch>\n      </Router>\n    </FriendsContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AuthContextProvider } from \"./context/AuthContext\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n);\n"],"sourceRoot":""}